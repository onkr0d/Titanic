services:
  flask:
    image: ghcr.io/onkr0d/titanic/backend:latest
    network_mode: host  # Use host networking to access Tailscale
    user: "${UID:-1000}:${GID:-1000}"  # Use host user ID or default to 1000
    volumes:
      - ./videos:/app/videos
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/run/secrets/admin-sdk-cred
      - UMBREL_SERVER_URL=http://100.97.35.4:3029 # tailsale ip
      - FIREBASE_API_KEY=${FIREBASE_API_KEY}
      - ENABLE_RNNOISE=${ENABLE_RNNOISE:-false}  # Set to 'true' to enable RNNoise denoising on mic track
    secrets:
      - admin-sdk-cred
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  caddy:
    image: ghcr.io/onkr0d/titanic/caddy:latest
    network_mode: host  # Use host networking to match Flask
    volumes:
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - flask
    healthcheck:
      test: ["CMD", "curl", "-f", "-k", "https://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    labels:
      - "com.centurylinklabs.watchtower.enable=true"

  watchtower:
    image: containrrr/watchtower
    network_mode: host  # Use host networking
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $HOME/.docker/config.json:/config.json:ro
    environment:
      - WATCHTOWER_POLL_INTERVAL=60
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_LABEL_ENABLE=true
    restart: unless-stopped

volumes:
  caddy_data:
    driver: local
  caddy_config:
    driver: local

secrets:
  admin-sdk-cred:
    file: ./admin-sdk-cred.json