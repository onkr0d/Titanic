# Docker Compose for Local Development
# To run: docker compose -f docker-compose.dev.yml up

services:
  # Backend services (from backend/docker-compose.build.yml)
  flask:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: titanic_flask_dev
    command: >
      sh -c "redis-server &
             rq worker ffmpeg &
             rq worker umbrel &
             python app.py"
    ports:
      - "6969:5000"
    volumes:
      # Mount source code for hot-reloading (Flask debug mode will use it)
      - ./backend:/app
    environment:
      - PYTHONUNBUFFERED=1
      - GOOGLE_APPLICATION_CREDENTIALS=/run/secrets/admin-sdk-cred
      - IS_DEV=${IS_DEV:-true}
      - UMBREL_SERVER_URL=http://umbrel:3029
      - FIREBASE_API_KEY=${FIREBASE_API_KEY}
      - ENABLE_RNNOISE=${ENABLE_RNNOISE:-true}  # Set to 'true' to enable RNNoise denoising on mic track
    secrets:
      - admin-sdk-cred
    networks:
      - titanic_dev_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Umbrel service with hot-reloading
  umbrel:
    build:
      context: ./titanic
      dockerfile: Dockerfile.dev
      # Only rebuild when dependencies change, not on every source change
      args:
        BUILDKIT_INLINE_CACHE: 1
    container_name: titanic_umbrel_dev
    ports:
      - "3029:3029"
    env_file:
      - .env
    volumes:
      # Mount source files for hot-reloading (cargo-watch will rebuild)
      - ./titanic/src:/app/src
      - ./titanic/Cargo.toml:/app/Cargo.toml
      - ./titanic/Cargo.lock:/app/Cargo.lock
      # Mount target directory to persist compiled dependencies
      - titanic_dev_cache:/app/target
      # Mount mock Clips directory for development (PLEX_MEDIA_PATH=/downloads)
      - ./umbrel/Downloads:/downloads
    networks:
      - titanic_dev_network
    # Healthcheck is disabled for cargo-watch, as the server might restart frequently.

networks:
  titanic_dev_network:
    driver: bridge

volumes:
  titanic_dev_cache:
    driver: local

secrets:
  admin-sdk-cred:
    file: ./backend/admin-sdk-cred.json 
